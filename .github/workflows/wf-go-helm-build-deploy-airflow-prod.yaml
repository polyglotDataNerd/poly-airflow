name: 'Build and Deploy Airflow to AWS EKS'

on:
  push:
    branches:
      - default
env:
  DEPLOY_ENV: default
  AWS_REGION: us-west-2
#  AWS_PROFILE: poly

jobs:
  build-and-deploy:
    name: Airflow CI/CD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set AWS Creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/poly/airflow:${{ github.sha }}
          build-args: SQL_ALCHEMY_CONN=${{secrets.PROD_SQL_ALCHEMY_CONN}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache     

      - name: Deploy Helm Chart to K8s
        uses: koslibpro/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.PROD_KUBECONFIG }}
        with:
          command: "helm upgrade --install --debug --wait --timeout 3m --atomic -f ./helm/env/prod.yaml --set image.repository=${{ steps.login-ecr.outputs.registry }}/poly/airflow --set image.tag=${{ github.sha }} --set db_password=${{ secrets.DB_DATA }} --set fernet_key=${{ secrets.PROD_FERNET_KEY }} --namespace=poly-airflow --create-namespace --wait  airflow ./helm/airflow-helm"
